const posts = [];
let lastActivityTime = '';

// Function to simulate creating a post
async function createPost(post) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            posts.push(post);
            resolve();
        }, 2000);
    });
}

// Function to simulate updating user's last activity time
async function updateLastUserActivityTime() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            lastActivityTime = new Date().toLocaleTimeString();
            resolve();
        }, 1000);
    });
}

// Function to simulate deleting a post
async function deletePost() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (posts.length > 0) {
                const deletedPost = posts.pop();
                resolve(deletedPost);
            } else {
                reject("ERROR: ARRAY IS EMPTY");
            }
        }, 1000);
    });
}

// Function to simulate getting cold drinks
async function getColdDrinks() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve("Cold Drinks");
        }, 1500);
    });
}

// Using async/await to handle promises
async function handlePromises() {
    try {
        await createPost("Post 1");
        await updateLastUserActivityTime();

        console.log("Posts:", posts);
        console.log("Last Activity Time:", lastActivityTime);

        const deletedPost = await deletePost();
        console.log("Deleted Post:", deletedPost);

        await updateLastUserActivityTime();

        console.log("Posts:", posts);
        console.log("Last Activity Time:", lastActivityTime);

        const coldDrinks = await getColdDrinks();
        console.log("Cold Drinks:", coldDrinks);
    } catch (error) {
        console.log(error);
    }
}

handlePromises();
